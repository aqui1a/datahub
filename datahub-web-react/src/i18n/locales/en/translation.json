{
  "adminHeader": {
    "analyticsText": "Analytics",
    "analyticsTitle": "View DataHub usage analytics",
    "domainsDescription": "Manage related groups of data assets",
    "domainsText": "Domains",
    "glossaryDescription": "View and modify your data dictionary",
    "glossaryText": "Glossary",
    "ingestionText": "Ingestion",
    "ingestionTitle": "Connect DataHub to your organization's data sources",
    "settingsTitle": "Manage your DataHub settings"
  },
  "analytics": {
    "chartsFailedToLoad": "Charts failed to load",
    "domainsFailedToLoad": "Domains failed to load",
    "highlightsFailedToLoad": "Highlights failed to load",
    "selectADomain": "Select a domain",
    "specifyDomainOrQueryToGetGranularResults": "Please specify domain or query to get granular results"
  },
  "assertion": {
    "allFailing": "All assertions have failed",
    "allPassing": "All assertions have passed",
    "assertionResume": "{{successCount}} successful assertions, {{failedCount}} failed assertions",
    "assertionStatusTooltip": "This status is based on the most recent run of each assertion.",
    "columnValuesAre_component": "Column <typographyTextStrong>{{columnText}}</typographyTextStrong> values are",
    "datasetColumnCountIs": "Dataset column count is",
    "datasetColumnsAre": "Dataset columns are",
    "dataSetColumnsAre_component": "Dataset columns <typographyTextStrong>{{fieldNames}}</typographyTextStrong> are",
    "datasetIs": "Dataset is",
    "datasetRowCountIs": "Dataset row count is",
    "datasetRowsAre": "Dataset rows are",
    "deleteAssertionModal": {
      "content": "Are you sure you want to remove this assertion from the Dataset?"
    },
    "evaluations": "Evaluations",
    "failed": "Failed",
    "invalidCount": "Invalid Count",
    "lastEvaluatedWithDate": "Last evaluated on {{date}}",
    "maximumValueForColumnIs_component": "Maximum value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "meanValueForColumnIs_component": "Mean value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "medianValueForColumnIs_component": "Median value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "minimumValueForColumnIs_component": "Minimum value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "noAssertionsFound": "No Assertions Found",
    "noAssertionsHaveRun": "No assertions have run",
    "noEvaluations": "No Evaluations",
    "nullCountForColumnIs_component": "Null count for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "nullProportionForColumnIs_component": "Null proportion for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "passed": "Passed",
    "passingAssertion": "Passing assertion",
    "passingOperator": "Passing operator",
    "someFailing": "Some assertions have failed",
    "standardDeviationForColumnIs_component": "Standard deviation for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "uniqueValueCountForColumnIs_component": "Unique value count for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "uniqueValueProportionForColumnIs_component": "Unique value proportion for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "viewLogic": "View Logic"
  },
  "authentification": {
    "acceptedInvite": "Accepted invite!",
    "confirmPassword": "Confirm Password",
    "copiedInviteLinkToClipboard": "Copied invite link to clipboard",
    "copyInviteLink": "Copy invite link.",
    "copyInviteLinkDescription": "Copy an invite link to send to your users. When they join, users will be automatically assigned to the selected role.",
    "failedToAcceptInvite": "Failed to accept invite",
    "failedToLogIn": "Failed to log in.",
    "generatedNewInviteLink": "Generated new invite link",
    "generateNewInviteLinkError": "Failed to create Invite Token for role {{roleName}}",
    "generateNewLink": "Generate a new link",
    "generateNewLinkDescription_component": "Generate a new reset link! Note, any old links will <bold>cease to be active</bold>.",
    "generateNewLinkTitle": "Generate a new link. Any old links will no longer be valid.",
    "loggingIn": "Logging in",
    "newLinkMustBeGenerated": "A new link must be generated",
    "newLinkMustBeGeneratedDescription": "You cannot view any old reset links. Please generate a new one below.",
    "resetCredentialError": "Failed to create new link to reset credentials",
    "resetCredentials": "Reset credentials",
    "resetCredentialSuccess": "Generated new link to reset credentials",
    "resettingCredentials": "Resetting credentials",
    "resetUserPassword": "Reset User Password",
    "shareInviteLink": "Share Invite Link",
    "shareResetLink": "Share reset link",
    "shareResetLinkDescription_component": "Share this reset link to reset the credentials for {{username}}. <bold>This link will expire in 24 hours.</bold>",
    "signIn": "Sign In",
    "signingUp": "Signing up",
    "signInWithSso": "Sign in with SSO",
    "signOut": "Sign Out",
    "signUp": "Sign Up",
    "userHasLoggedIn": "The user has logged in."
  },
  "chart": {
    "lastChangedTimeInSource": "The time at which the chart was last changed in the source platform",
    "onAContainedChart": "on a contained Chart"
  },
  "common": {
    "clearAll": "Clear All",
    "phone": "Phone",
    "team": "Team",
    "about": "About",
    "access": "Access",
    "accessType": "Access Type",
    "actionNotSupportedMessage": "This action is not supported for the selected types.",
    "activate": "ACTIVATE",
    "actors": "Actors",
    "actual": "Actual",
    "add": "Add",
    "advanced": "Advanced",
    "advancedOptions": "Advanced Options",
    "all": "All",
    "analytics": "Analytics",
    "announcement": "Announcement",
    "appearance": "Appearance",
    "assertion": "Assertion",
    "assertions": "Assertions",
    "asset": "Asset",
    "assets": "Assets",
    "aToZ": "A to Z",
    "audio": "Audio",
    "back": "Back",
    "backAction": "Back",
    "basic": "Basic",
    "Beta": "beta",
    "betweenAndLowercaseWithName_component": "Between <component1>{{name1}}<component1> and <component2>{{name2}}<component2>",
    "binary": "Binary",
    "browse": "Browse",
    "businessGlossary": "Business Glossary",
    "byte": "Byte",
    "cancel": "Cancel",
    "capabilities": "Capabilities",
    "changed": "Changed",
    "charts": "Charts",
    "clear": "Clear",
    "close": "Close",
    "column": "Column",
    "composedOf": "Composed Of",
    "connection": "Connection",
    "consumesWithNameNNumber": "Consumes {{count}} {{name}}",
    "container": "Container",
    "containsWithNameNNumber": "Contains {{count}} {{name}}",
    "contents": "Contents",
    "continuous": "Continuous",
    "copied": "Copied",
    "copy": "Copy",
    "count": "Count",
    "create": "Create",
    "dashboards": "Dashboards",
    "dataProduct": "Data Product",
    "dataProducts": "Data Products",
    "dataset": "Dataset",
    "datasets": "Datasets",
    "date": "Date",
    "day": "Day",
    "dayOfWeek": "Day of week",
    "deactivate": "DEACTIVATE",
    "debugMode": "Debug Mode",
    "degree": "Degree",
    "dependency_interval": "(0-1)[Dependency];(2-inf)[Dependencies]",
    "deprecation": "Deprecation",
    "description": "Description",
    "details": "Details",
    "developer": "Developer",
    "documentation": "Documentation",
    "domain": "Domain",
    "domains": "Domains",
    "done": "Done",
    "download": "Download",
    "downloading": "Downloading",
    "downstream": "Downstream",
    "edit": "Edit",
    "email": "Email",
    "entities": "Entities",
    "entity": "Entity",
    "entityType": "Entity Type",
    "environment": "Environment",
    "execute": "Execute",
    "false": "False",
    "features": "features",
    "field": "Field",
    "fields": "Fields",
    "filter": "Filter",
    "filters": "Filters",
    "form": "Form",
    "foundInWithNameNNumber": "Found in {{count}} {{name}}",
    "fullName": "Full Name",
    "glossary": "Glossary",
    "glossaryTerms": "Glossary Terms",
    "govern": "Govern",
    "group": "Group",
    "groupMember": "Group Member",
    "groupMembers": "Group Members",
    "groups": "Groups",
    "header": "Header",
    "hidden": "Hidden",
    "hide": "Hide",
    "historical": "Historical",
    "hour": "Hour",
    "hyperParameters": "Hyper Parameters",
    "id": "Id",
    "image": "Image",
    "inputs": "Inputs",
    "interval": "Interval",
    "key": "Key",
    "language": "Language",
    "lastModifiedInPlatform": "Last Modified in Platform",
    "latest": "Latest",
    "learnMore": "Learn More",
    "less": "Less",
    "lineage": "Lineage",
    "link": "Link",
    "loading": "Loading",
    "logic": "Logic",
    "logs": "Logs",
    "manage": "Manage",
    "manually": "Manually",
    "map": "Map",
    "materialized": "Materialized",
    "members": "Members",
    "memberWithCount_interval": "(0-1)[{{count}} member];(2-inf)[{{count}} members];",
    "metadata": "Metadata",
    "minute": "Minute,",
    "models": "Models",
    "month": "Month",
    "more": "More",
    "move": "Move",
    "moveTo": "Move To",
    "na": "N/A",
    "name": "Name",
    "navigate": "Navigate",
    "new": "New",
    "next": "Next",
    "noAdditionalDetails": "No additional details",
    "noData": "No Data",
    "noDescription": "No description",
    "nominal": "Nominal",
    "none": "None",
    "noPost": "No Posts",
    "noPreviewWasFound": "No preview was found.",
    "noResultsFound": "No results found",
    "noSchema": "No Schema",
    "note": "Note",
    "notFound": "Not Found",
    "notFoundWithName": "{{name}} Not Found",
    "noTitle": "No title",
    "notScheduled": "Not scheduled",
    "ok": "Ok",
    "operations": "Operations",
    "optional": "Optional",
    "ordinal": "Ordinal",
    "original": "Original",
    "other": "Other",
    "outputs": "Outputs",
    "outsideDataHub": "outside DataHub",
    "owner": "Owner",
    "owners": "Owners",
    "parent": "Parent",
    "partOf": "Part Of",
    "partOfWithName": "Part of {{name}}",
    "password": "Password",
    "pending": "Pending",
    "permissions": "Permissions",
    "pinned": "Pinned",
    "pipeline": "Pipeline",
    "platform": "Platform",
    "platforms": "Platforms",
    "policies": "Policies",
    "post": "Post",
    "posts": "Posts",
    "preferences": "Preferences",
    "preview": "Preview",
    "previous": "Previous",
    "primaryKey": "Primary Key",
    "private": "Private",
    "privileges": "Privileges",
    "properties": "Properties",
    "provisioned": "Provisioned",
    "public": "Public",
    "queries": "Queries",
    "query": "Query",
    "raw": "Raw",
    "read": "Read",
    "readLess": "$t(common.read) $t(common.less)",
    "readMore": "$t(common.read) $t(common.more)",
    "reads": "Reads",
    "recipe": "Recipe",
    "recommended": "Recommended",
    "refresh": "Refresh",
    "relatedEntities": "Related Entities",
    "relatedTerms": "Related Terms",
    "relevance": "Relevance",
    "remove": "Remove",
    "request": "Request",
    "resource": "Resource",
    "resourceType": "Resource Type",
    "retry": "Retry",
    "return": "Return",
    "revoke": "Revoke",
    "role": "Role",
    "roleName": "Role Name",
    "roles": "Roles",
    "rollback": "Rollback",
    "row": "Row",
    "rowCount": "Row Count",
    "rows": "Rows",
    "run": "Run",
    "runs": "Runs",
    "save": "Save",
    "saveChanges": "Save Changes",
    "schedule": "Schedule",
    "schema": "Schema",
    "search": "Search",
    "secret": "Secret",
    "selected_interval": "(0-inf)[{{count}} Selected];",
    "sequence": "Sequence",
    "set": "Set",
    "setting": "Setting",
    "settings": "Settings",
    "share": "Share",
    "show": "Show",
    "showLess": "$t(common.show) $t(common.less)",
    "showMore": "$t(common.show) $t(common.more)",
    "source": "Source",
    "sources": "sources",
    "state": "State",
    "stats": "Stats",
    "status": "Status",
    "subtype": "Subtype",
    "success": "Success",
    "summary": "Summary",
    "table": "Table",
    "tabular": "Tabular",
    "tag": "Tag",
    "tags": "Tags",
    "tasks": "Tasks",
    "test": "Tests",
    "text": "Text",
    "time": "Time",
    "timezone": "Timezone",
    "title": "Title",
    "token": "Token",
    "tokens": "Tokens",
    "topWithName": "Top {{name}}",
    "total": "Total",
    "trainingMetrics": "Training Metrics",
    "true": "True",
    "type": "Type",
    "unauthorized": "Unauthorized",
    "undefined": "Undefined",
    "uniqueUsers": "unique users",
    "unknown": "Unknown",
    "upstream": "Upstream",
    "usage": "Usage",
    "useless": "Useless",
    "user": "User",
    "username": "Username",
    "users": "Users",
    "validation": "Validation",
    "value": "Value",
    "video": "Video",
    "view": "View",
    "viewAll": "View All",
    "viewDetails": "View details",
    "views": "Views",
    "withValue": "With value",
    "writes": "Writes",
    "yaml": "YAML",
    "yes": "Yes",
    "zToA": "Z to A"
  },
  "copy": {
    "copiedUrl": "Copied URL",
    "copyColumnFieldPath": "Copy Column Field Path",
    "copyColumnUrn": "Copy Column Urn",
    "copyLink": "Copy Link",
    "copyShareableLinkToEntity": "Copy a shareable link to this entity.",
    "copyUrnForThis": "Copy the URN for this {{type}}. An URN uniquely identifies an entity on DataHub.",
    "urnTooltip": "Copy URN. An URN uniquely identifies an entity on DataHub."
  },
  "crud": {
    "addAssets": "Add assets",
    "addAssetsToWithName": "Add assets to {{name}}",
    "adding": "Adding",
    "addToAssets": "Add to assets",
    "addToAssetsWithName": "Add {{name}} to assets",
    "addWithName": "Add {{name}}",
    "createWithName": "Create {{name}}",
    "delete": "Delete",
    "deleteWithName": "Delete {{name}}",
    "deleting": "Deleting",
    "doYouWantTo": {
      "confirmDelete": "Confirm Delete",
      "confirmDeleteOwnershipType": "Are you sure you want to delete this ownership type?",
      "confirmRemovalWithName": "Confirm {{name}} Removal",
      "deleteContentWithThisName": "Are you sure you want to delete this {{name}} ?",
      "removeContentWithTheName": "Are you sure you want to remove the {{name}} ?",
      "removeContentWithThisName": "Are you sure you want to remove this {{name}} ?",
      "removeTitleWithName": "Do you want to remove {{name}} ?"
    },
    "editWithName": "Edit {{name}}",
    "error": {
      "add": "Failed to add",
      "addAssetsToWithName": "Failed to add assets to {{name}}",
      "addWithName": "Failed to add {{name}}",
      "changesSaved": "Failed to Save changes",
      "create": "Failed to create",
      "createWithName": "Failed to create {{name}}",
      "delete": "Failed to delete",
      "deleteWithName": "Failed to delete {{name}}",
      "editWithName": "Failed to edit {{name}}",
      "loadWithName": "Failed to load {{name}}",
      "move": "Failed to move",
      "notAuthorizedToAccessPage": "Sorry, you are not authorized to access this page.",
      "remove": "Failed to remove",
      "removeAssetsWithName": "Failed to remove assets from {{name}}",
      "removeWithName": "Failed to remove {{name}}",
      "revokeWithName": "Failed to revoke {{name}}",
      "update": "Failed to update",
      "updateWithName": "Failed to update {{name}}",
      "updatingWithName": "Error updating {{name}}"
    },
    "makeWithName": "Make {{name}}",
    "markAsDeleted": "Mark as deleted",
    "removeWithName": "Remove {{name}}",
    "removing": "Removing",
    "saving": "Saving",
    "setWithName": "Set {{name}}",
    "success": {
      "addAssetsToWithName": "Added assets to {{name}}!",
      "addWithName": "Added {{name}}!",
      "changesSaved": "Changes saved.",
      "createWithName": "Created {{name}}!",
      "deleteWithName": "{{name}} deleted!",
      "editWithName": "{{name}} edited!",
      "moveWithName": "{{name}} moved!",
      "removeWithName": "{{name}} removed!",
      "removeWithNameReverse": "Removed {{name}}.",
      "softDelete": "Soft Deleted",
      "successfullyCreateWithName": "Successfully created {{name}}!",
      "update": "Updated!",
      "updatedWithNameReverse": "Updated {{name}}!",
      "updateWithName": "{{name}} updated!"
    },
    "unsetWithName": "Set {{name}}",
    "update": "Update",
    "updating": "Updating"
  },
  "dashboard": {
    "lastChangedTimeInSource": "The time at which the dashboard was last changed in the source platform"
  },
  "dataset": {
    "addedColumnWithCount_interval": "(0-1)[{{count}} column was added];(2-inf)[{{count}} columns were added];",
    "dataSetByteOfStorage": "This dataset consumes {{count}} bytes of storage.",
    "lastUpdatedDataOn": "Data was last updated in the source platform on",
    "linkToTechnicalSchema_component": "Semantic versions for this view were computed using Technical Schema. You can find more info about how DataHub computes versions <linkComp>here</linkComp>",
    "monthlyQueries": "monthly queries",
    "queriesLastMonth": "queries last month",
    "removedColumnWithCount_interval": "(0-1)[{{count}} column was removed];(2-inf)[{{count}} columns were removed];",
    "updatedDescriptionWithCount_interval": "(0-1)[{{count}} description was updated];(2-inf)[{{count}} descriptions were updated];",
    "updatedOn": "Updated on "
  },
  "deprecation": {
    "decommissionDate": "Decommission Date",
    "deprecated": "Deprecated",
    "deprecationNote": "Deprecation note",
    "markAsDeprecated": "Mark as deprecated",
    "markAssetsAsUnDeprecatedError": "Failed to mark assets as un-deprecated",
    "markAssetsAsUnDeprecatedModalContent": "Are you sure you want to mark this asset as un-deprecated?",
    "markAssetsAsUnDeprecatedModalTitle": "Confirm Mark as un-deprecated",
    "markAssetsAsUnDeprecatedSuccess": "Marked assets as un-deprecated",
    "markAsUnDeprecated": "Mark as un-deprecated",
    "scheduledToBeDecommissionedOnWithDateTimezone": "Scheduled to be decommissioned on {{date}} ({{timezone}})"
  },
  "domain": {
    "domainDescriptionDescription": "An optional description for your new domain. You can change this later.",
    "domainIdDescription": "By default, a random UUID will be generated to uniquely identify this domain. If you'd like to provide a custom id instead to more easily keep track of this domain, you may provide it here. Be careful, you cannot easily change the domain id after creation.",
    "domainManagementDescription": "View your DataHub Domains. Take administrative actions.",
    "nbrOfEntityInDomain": "There are {{value}} entities in this domain.",
    "newDomain": "New Domain",
    "noDomain": "No Domains"
  },
  "duration": {
    "allTime": "All Time",
    "dateAtTimeWithTimeZone": "{{date}} at {{time}} ({{timeZone}})",
    "day_interval": "(0-1)[{{count}} day];(2-inf)[{{count}} days];",
    "fromWithDate": "From {{date}}",
    "hour_interval": "(0-1)[{{count}} hour];(2-inf)[{{count}} hours];",
    "lastDay_interval": "(0-1)[Last {{count}} day];(2-inf)[Last {{count}} days]",
    "lastXDays_interval": "(0-1)[Yesterday];(2-inf)[Last {{count}} days]",
    "month_interval": "(0-1)[{{count}} month];(2-inf)[{{count}} months];",
    "never": "Never",
    "now": "Now",
    "unknownTimeRange": "Unknown time range",
    "UntilWithDate": "Until {{date}}",
    "week_interval": "(0-1)[{{count}} week];(2-inf)[{{count}} weeks];",
    "year_interval": "(0-1)[{{count}} year];(2-inf)[{{count}} years];"
  },
  "entity": {
    "accessManagement": "Access Management",
    "addAHighlightedQuery": "Add a highlighted query",
    "allDataInputsAreHealthy": "All data inputs are healthy",
    "authorNameWithLink_component": "Added {{timestamp}} by <linkComponent>{{authorName}}</linkComponent>",
    "cantDeleteWithChildEntityWithName": "Can't delete {{name}} with child entities.",
    "cantDeleteWithSubDomainEntityWithName": "Can't delete {{name}} with sub-domain entities.",
    "cantFindEntityPageContent": "Sorry, we are unable to find this entity in DataHub",
    "deleteAssetMessageConfirmation": "Are you sure you want to mark these assets as deleted? This will hide the assets from future DataHub searches. If the assets are re-ingested from an external data platform, they will be restored.",
    "editor": {
      "exitEditor": "Exit Editor",
      "exitQueryEditor": "Exit Query Editor",
      "insertRow": {
        "above": "Insert row above",
        "below": "Insert row below",
        "left": "Insert column left",
        "right": "Insert column right"
      },
      "sureToCloseDocumentationEditor": "Are you sure you want to close the documentation editor? Any unsaved changes will be lost.",
      "sureToExitEditor": "Are you sure you want to exit the editor? Any unsaved changes will be lost."
    },
    "entityRemovedAlert": "This entity is not discoverable via search or lineage graph. Contact your DataHub admin for more information.",
    "featureTables": "Feature Tables",
    "foreignKeyTo": "Foreign Key to",
    "glossaryEntityUuidDescription": "By default, a random UUID will be generated to uniquely identify this entity. If you'd like to provide a custom id, you may provide it here. Note that it should be unique across the entire Glossary. Be careful, you cannot easily change the id after creation.",
    "highlightedQueries": "Highlighted Queries",
    "nbrDataSourceWithFailedAssertion_interval": "(0-1)[{{count}} data source with failing assertions];(2-inf)[{{count}} data sources with failing assertions];",
    "noDataProducts": "No data products",
    "noDocumentationAddedYet": "No documentation added yet.",
    "notAuthorizedToAddQueriesToEntity": "You are not authorized to add Queries to this entity.",
    "queriesThatHaveBeenRecentlyRunAgainstThisDataset": "Queries that have been recently run against this dataset",
    "recentQueries": "Recent Queries",
    "seeViewDefinition": "See View Definition",
    "sharedQueriesRelevantToThisDataset": "Shared queries relevant to this dataset",
    "someDataInputsAreNotHealthy": "Some data inputs are not healthy",
    "subtype": {
      "asset_interval": "(0-1)[Asset];(2-inf)[Assets];",
      "custom sql_interval": "(0-1)[Custom SQL];(2-inf)[Custom SQL];",
      "database_interval": "(0-1)[Database];(2-inf)[Databases];",
      "datastream_interval": "(0-1)[DataStream];(2-inf)[DataStreams];",
      "embedded data source_interval": "(0-1)[Embedded Data Source];[Embedded Data Sources](2-inf);",
      "entity_interval": "(0-1)[Entity];(2-inf)[Entities];",
      "explore_interval": "(0-1)[Explore];(2-inf)[Explores];",
      "index_interval": "(0-1)[Index];(2-inf)[Index];",
      "model_interval": "(0-1)[Model];(2-inf)[Models];",
      "published data source_interval": "(0-1)[Published Data Source];(2-inf)[Published Data Sources];",
      "schema_interval": "(0-1)[Schema];(2-inf)[Schemas];",
      "table_interval": "(0-1)[Table];(2-inf)[Tables];",
      "topic_interval": "(0-1)[Topic];(2-inf)[Topics];",
      "view_interval": "(0-1)[View];(2-inf)[Views];",
      "workbook_interval": "(0-1)[Workbook];(2-inf)[Workbooks];"
    },
    "type": {
      "CHART_interval": "(0-1)[Chart];(2-inf)[Charts];",
      "CONTAINER_interval": "(0-1)[Container];(2-inf)[Containers];",
      "CORP_GROUP_interval": "(0-1)[Corp Group];(2-inf)[Corp Groups];",
      "CORP_USER_interval": "(0-1)[Corp User];(2-inf)[Corp Users];",
      "DASHBOARD_interval": "(0-1)[Dashboard];(2-inf)[Dashboards];",
      "DATA_FLOW_interval": "(0-1)[Data Flow];(2-inf)[Data Flows];",
      "DATA_JOB_interval": "(0-1)[Data Job];(2-inf)[Data Jobs];",
      "DATA_PLATFORM_interval": "(0-1)[Data Platform];(2-inf)[Data Platforms];",
      "DATASET_interval": "(0-1)[Dataset];(2-inf)[Datasets];",
      "DOMAIN_interval": "(0-1)[Domain];(2-inf)[Domains];",
      "GLOSSARY_NODE_interval": "(0-1)[Term Group];(2-inf)[Term Groups];",
      "GLOSSARY_TERM_interval": "(0-1)[Glossary Term];(2-inf)[Glossary Terms];",
      "MLFEATURE_interval": "(0-1)[Mlfeature];(2-inf)[Mlfeatures];",
      "MLFEATURE_TABLE_interval": "(0-1)[Mlfeature Table];(2-inf)[Mlfeature Tables];",
      "MLMODEL_GROUP_interval": "(0-1)[Mlmodel Group];(2-inf)[Mlmodel Groups];",
      "MLMODEL_interval": "(0-1)[Mlmodel];(2-inf)[Mlmodels];",
      "MLPRIMARY_KEY_interval": "(0-1)[Mlprimary Key];(2-inf)[Mlprimary Keys];",
      "ROLE_interval": "(0-1)[Role];(2-inf)[Roles];",
      "TAG_interval": "(0-1)[Tag];(2-inf)[Tags];"
    },
    "unknownDataInputHealth": "Unknown data input health",
    "unsetDataProductContent": "Are you sure you want to unset Data Product for these assets?",
    "unsetDataProductTitle": "If you continue, Data Product will be removed for the selected assets.",
    "unsetDomainContent": "Are you sure you want to unset Domain for these assets?",
    "unsetDomainTitle": "If you continue, Domain will be removed for the selected assets.",
    "viewDefinition": "View Definition",
    "viewEntityWithName": "View {{name}} profile",
    "viewInDataHub": "view in DataHub"
  },
  "error": {
    "bulkEditIncludeUnauthorizedEntity": "Your bulk edit selection included entities that you are unauthorized to update. The bulk edit being performed will not be saved.",
    "errorSection": {
      "anUnexpectedErrorOccurred": "An unexpected error occurred. Please try again later, or reach out to your administrator",
      "checkOutThisRessources": "Check out these resources:",
      "needSupport": "Need support?",
      "needSupport_component": "<bold>Need support?</bold> Check out these resources:",
      "ressourcesLabel": {
        "docs": "DataHub Docs",
        "github": "DataHub GitHub",
        "project": "DataHub Project"
      },
      "somethingWentWrong": "Something went wrong."
    },
    "failedToAssignRoleToUsers": "Failed to assign Role to users",
    "failedToFindRendererCorrespondingToRenderType": "Failed to find renderer corresponding to renderType {{name}}",
    "pageNotFound": "The page your requested was not found",
    "sidebarFailedToLoad": "The sidebar failed to load.",
    "unsupportedTestResultType": "Unsupported Test Result Type {{result}} provided."
  },
  "filter": {
    "basicFilters": "Basic Filters",
    "advancedFilters": "Advanced Filters",
    "allFilters": "All filters",
    "anyFilter": "Any filter",
    "contains": {
      "false": "does not contain",
      "true": "contains"
    },
    "equals": {
      "false": "not equal",
      "true": "equals"
    },
    "filterBy": "Filter by",
    "filterByWithName": "Filter by {{name}}",
    "greater": {
      "false": "less than or equal to",
      "true": "greater than"
    },
    "in": {
      "false": "not in",
      "true": "in"
    },
    "is": {
      "false": "isn't",
      "true": "is"
    },
    "isOf": {
      "false": "is not",
      "true": "is any of"
    },
    "less": {
      "false": "greater than or equal to",
      "true": "less than"
    },
    "noFilterApplied": "No filters applied.",
    "null": {
      "false": "not null",
      "true": "is null"
    },
    "showResultsThatMatch": "Show results that match",
    "text": {
      "endWith": "end with",
      "startWith": "start with"
    },
    "view": {
      "descriptionDescription": "Write a description for your View.",
      "exitViewEditor": "Exit View Editor",
      "exitViewEditorConfirm": "Are you sure you want to exit View editor? All changes will be lost",
      "filterDescription": "Select the filters that are applied when this View is selected. Assets that match these filters will be shown when the View is applied.",
      "manageViewDescription": "Create, edit, and remove your Views. Views allow you to save and share sets of filters for reuse when browsing DataHub.",
      "nameDescription": "Give your new View a name.",
      "onlyVisibleToYou": "only visible to you.",
      "previewView": "Preview View",
      "saveAsView": "Save as View",
      "saveTheseFiltersAsANewView": "Save these filters as a new View.",
      "typeDescription": "Select the type of your new View.",
      "viewsAllowYouToEasilySaveOrShareSearchFilters": "Views allow you to easily save or share search filters.",
      "visibleToEveryone": "visible to everyone."
    }
  },
  "form": {
    "required": "Required",
    "altText": "Alt Text",
    "confirmYourPassword": "Please confirm your password",
    "enterAGroupName": "Enter a Group name",
    "enterANameWithName": "Enter a {{name}} name.",
    "enterAValidEntityId": "Please enter a valid entity id",
    "enterCorrectGroupName": "Please enter correct Group name",
    "enterValidDomainId": "Please enter a valid Domain id",
    "fillInYourEmail": "Please fill in your email",
    "fillInYourName": "Please fill in your name",
    "fillInYourPassword": "Please fill in your password",
    "fillInYourTitle": "Please fill in your title",
    "labelRequired": "A URL is required.",
    "ownershipTypeNameRequired": "Please input a name for the ownership type",
    "passwordIsFewerThan8Characters": "Your password is fewer than 8 characters",
    "passwordsDoNotMatch": "Your passwords do not match",
    "pleaseConfirmYourPassword": "Please confirm your password",
    "provideAValidLdap": "Please provide a valid LDAP!",
    "urlRequired": "A URL is required.",
    "validEmailRequired": "Please enter valid email.",
    "validUrlRequired": "This field must be a valid url.",
    "viewNameRequired": "Please enter a name for your View.",
    "validPhoneNumberRequired": "Please enter a valid phone number."
  },
  "glossary": {
    "emptyGlossary": "Empty Glossary",
    "emptyGlossaryDescription": "Create Terms and Term Groups to organize data assets using a shared vocabulary."
  },
  "group": {
    "cantEditBecauseExternalGroup": "Membership for this group cannot be edited in DataHub as it originates from {{externalGroupType}}",
    "groupId": "Group Id",
    "groupIdDescription": "By default, a random UUID will be generated to uniquely identify this group. If you'd like to provide a custom id instead to more easily keep track of this group, you may provide it here. Be careful, you cannot easily change the group id after creation.",
    "noGroupOwnersAdded": "No group owners added yet",
    "noGroups": "No Groups",
    "noMemberInGroup": "No members in this group yet.",
    "removeFromGroup": "Remove from Group",
    "removeUserConfirm": "Are you sure you want to remove this user from the group?"
  },
  "home": {
    "changeLanguageTitle": "Change Langage",
    "exploreYourData": "Explore your data",
    "module": {
      "Domains": "Domains",
      "HighUsageEntities": "Most Popular",
      "Platforms": "Platforms",
      "RecentlyEditedEntities": "Recently Edited",
      "RecentlyViewedEntities": "Recently Viewed",
      "RecentSearches": "Recent searches",
      "TopTags": "Top Tags",
      "TopTerms": "Top Glossary Terms"
    },
    "noMetadata": "No Metadata Found 😢",
    "scheduleDemo": "Schedule a Demo of Managed DataHub",
    "scheduleDemoDescription_component": "DataHub is already the industry's #1 Open Source Data Catalog. <styledLinkDemo>Schedule a demo</styledLinkDemo>  of Acryl DataHub to see the advanced features that take it to the next level or purchase Acryl Cloud on <styledLinkAws>AWS Marketplace</styledLinkAws>!",
    "trySearchingFor": "Try searching for as asda",
    "welcomeBack": "Welcome back"
  },
  "ingest": {
    "viewIngestedAssets": "View Ingested Assets",
    "ingestionSource": "Ingestion Source",
    "aConnectionWasNotAbleToBeEstablishedWithSourceName": "A connection was not able to be established with {{sourceName}}.",
    "aConnectionWasSuccessfullyEstablishedWithSourceName": "A connection was successfully established with {{sourceName}}.",
    "advancedProvideCustomCLIVersionToUseForIngestion": "Advanced: Provide a custom CLI version to use for ingestion.",
    "advancedTurnOnDebugMode": "Advanced: Turn on debug mode in order to get more verbose logs.",
    "areYouSureYouWantToContinue": "Are you sure you want to continue?",
    "bigquery": {
      "bigqueryClientEmailToolTip": "The Client Email, which can be found in your service account's JSON Key (client_email).",
      "bigqueryClientIDToolTip": "The Client ID, which can be found in your service account's JSON Key (client_id).",
      "bigqueryCredentialProjectIDToolTip": "The Project ID, which can be found in your service account's JSON Key (project_id)",
      "bigqueryFilterSectionTooltip": "Include or exclude specific Projects, Datasets, Tables and Views from ingestion.",
      "bigqueryPrivateKeyIDToolTip": "The Private Key id, which can be found in your service account's JSON Key (private_key_id)",
      "bigqueryPrivateKeyToolTip": "The Private key, which can be found in your service account's JSON Key (private_key).",
      "bigqueryProjectIDToolTip": "Project ID where you have rights to run queries and create tables.",
      "label": {
        "clientEmail": "Client Email",
        "credentialProjectID": "Credentials Project ID",
        "privateKey": "Private Key",
        "privateKeyID": "Private Key Id"
      }
    },
    "bigqueryBeta": {
      "bigqueryBetaDatasetsAllowToolTip": "Use regex here.",
      "bigqueryBetaDatasetsDenyToolTip": "Use regex here.",
      "bigqueryBetaProjectAllowToolTip": "Use regex here to filter for project IDs.",
      "bigqueryBetaProjectDenyToolTip": "Use regex here to filter for project IDs.",
      "bigqueryBetaProjectIdToolTip": "The Project ID, which can be found in your service account's JSON Key (project_id)",
      "bigqueryFilterSectionTooltip": "Include or exclude specific Projects, Datasets, Tables and Views from ingestion.",
      "section": {
        "datasets": "Datasets",
        "projects": "Projects"
      }
    },
    "chooseATimezoneForTheSchedule": "Choose a timezone for the schedule.",
    "cli": "CLI",
    "cliExecution": "CLI Execution",
    "cliVersion": "CLI Version",
    "common": {
      "commonDashboardAllowToolTip": "Only include specific Dashboards by providing the name of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included.",
      "commonDashboardDenyToolTip": "Exclude specific Dashboards by providing the name of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included. Deny patterns always take precendence over Allow patterns.",
      "commonDatabasesAllowToolTip": "Only include specific Databases by providing the name of a Database, or a Regular Expression (REGEX). If not provided, all Databases will be included.",
      "commonDatabasesDenyToolTip": "Exclude specific Databases by providing the name of a Database, or a Regular Expression (REGEX). If not provided, all Databases will be included. Deny patterns always take precedence over Allow patterns.",
      "commonEnableColumnProfilingToolTip": "Generate Data Profiles for the Columns in extracted Tables. Enabling this may increase the duration of the extraction process.",
      "commonEnableStatefulIngestionToolTip": "Remove stale assets from DataHub once they have been deleted in the ingestion source.",
      "commonEnableTableProfilingToolTip": "Generate Data Profiles for extracted Tables. Enabling this may increase the duration of the extraction process.",
      "commonExtractOwnersToolTip": "When enabled, extracts ownership from Looker directly. When disabled, ownership is left empty for dashboards and charts.",
      "commonExtractUsageHistoryToolTip": "Experimental (Subject to breaking change) -- Whether to ingest usage statistics for dashboards. Setting this to True will query looker system activity explores to fetch historical dashboard usage.",
      "commonGithubRepoToolTip": "Name of your github repo. e.g. repo for <aLink>https://github.com/datahub-project/datahub</aLink> is datahub-project/datahub.",
      "commonIncludeLineageToolTip": "Include Table and View lineage in your ingestion.",
      "commonIncludeTableLineageToolTip": "Extract Tabel-Level lineage metadata. Enabling this may increase the duration of the extraction process.",
      "commonIncludeTablesToolTip": "Extract Tables from source.",
      "commonIncludeUpstreamLineageInReportToolTip": "Useful for debugging lineage information. Set to True to see the raw lineage created internally.",
      "commonIncludeViewsToolTip": "Extract Views from source.",
      "commonIngestOwnerToolTip": "Ingest Owner from source. Be careful: This cah override Owners added by users of DataHub.",
      "commonIngestTagsToolTip": "Ingest Tags from the source. Be careful: This can override Tags entered by users of DataHub.",
      "commonSchemaAllowToolTip": "Only include specific Schemas by providing the name of a Schema, or a Regular Expression (REGEX) to include specific Schemas. If not provided, all Schemas inside allowed Databases will be included.",
      "commonSchemaDenyToolTip": "Exclude specific Schemas by providing the name of a Schema, or a Regular Expression (REGEX). If not provided, all Schemas inside allowed Databases will be included. Deny patterns always take precedence over Allow patterns.",
      "commonSkipPersonalFoldersToolTip": "Whether to skip ingestion of dashboards in personal folders. Setting this to True will only ingest dashboards in the Shared folder space.",
      "commonStartTimeToolTip": "Earliest date used when processing audit logs for lineage, usage, and more. Default: Last full day in UTC or last time DataHub ingested usage (if stateful ingestion is enabled). Tip: Set this to an older date (e.g. 1 month ago) to bootstrap your first ingestion run, and then reduce for subsequent runs. Changing this may increase the duration of the extraction process.",
      "commonTableAllowToolTip": "Only include Tables with particular names by providing the fully qualified name of a Table, or a Regular Expression (REGEX). If not provided, all Tables inside allowed Databases and Schemas will be included in ingestion.",
      "commonTableDenyToolTip": "Exclude Tables with particular names by providing the fully qualified name of a Table, or a Regular Expression (REGEX). If not provided, all Tables inside allowed Databases and Schemas will be included in ingestion. Deny patterns always take precedence over Allow patterns.",
      "commonTableLineageModeToolTip": "Which table lineage collector mode to use. Check out <aLink>the documentation</aLink> explaining the difference between the three available modes.",
      "commonViewAllowToolTip": "Only include Views with particular names by providing the fully qualified name of a View, or a Regular Expression (REGEX). If not provided, all Views inside allowed Databases and Schemas will be included in ingestion.",
      "commonViewDenyToolTip": "Exclude Views with particular names by providing the fully qualified name of a View, or a Regular Expression (REGEX). If not provided, all Views inside allowed Databases and Schemas will be included in ingestion. Deny patterns always take precedence over Allow patterns.",
      "label": {
        "enableColumnProfiling": "Enable Column Profiling",
        "enableStatefulIngestion": "Enable Stateful Ingestion",
        "enableTableProfiling": "Enable Table Profiling",
        "extractUsageHistory": "Extract Usage History",
        "includeTables": "Include Tables",
        "includeUpstreamLineageInReport": "Include Upstream Lineage In Report.",
        "includeViews": "Include Views",
        "ingestOwner": "Ingest Owner",
        "ingestTags": "Ingest Tags",
        "skipPersonalFolders": "Skip Personal Folders",
        "startTime": "Start Time",
        "tableLineageMode": "Table Lineage Mode"
      },
      "section": {
        "databases": "Databases",
        "schemas": "Schemas",
        "views": "Views"
      }
    },
    "configureAnIngestionSchedule": "Configure an Ingestion Schedule",
    "configureSourceRecipeWithName": "Configure {{name}} Recipe",
    "confirmCancelModalContent": "Cancelling an running execution will NOT remove any data that has already been ingested. You can use the DataHub CLI to rollback this ingestion run.",
    "confirmCancelModalTitle": "Confirm Cancel",
    "confirmIngestionRemovalModalContent": "Are you sure you want to remove this ingestion source? Removing will terminate any scheduled ingestion runs.",
    "confirmIngestionRemovalModalTitle": "Confirm Ingestion Source Removal",
    "confirmRollbackModalContent": "Rolling back this ingestion run will remove any new data ingested during the run. This may exclude data that was previously extracted, but did not change during this run.",
    "confirmRollbackModalTitle": "Confirm Rollback",
    "confirmSourceExecutionModalContent": "Click 'Execute' to run this ingestion source.",
    "confirmSourceExecutionModalTitle": "Confirm Source Execution",
    "connectionFailed": "Connection Failed",
    "connectionSucceeded": "Connection Succeeded",
    "connectionTestWithSourceName": "{{sourceName}} Connection Test",
    "copyExecutionRequestURN": "Copy Execution Request URN",
    "copyIngestionSourceURNTitle": "Copy Ingestion Source URN",
    "createANewSecret": "Create a new Secret",
    "createdSecret": "Created secret!",
    "createNewSecret": "Create new secret",
    "createNewSource": "Create new source",
    "createSecret": "Create Secret",
    "datahubLookerIngestionSource": "DataHub Looker Ingestion Source",
    "datahubLookMLIngestionSource": "DataHub LookML Ingestion Source",
    "dbtCloud": {
      "dbtCloudAccountIDToolTipOne": "The ID of the dbt Cloud account to extract metadata for.",
      "dbtCloudAccountIDToolTipTwo": "This can be found in the URL of your dbt instance: https://cloud.getdbt.com/#/accounts/ACCOUNT_ID/.",
      "dbtCloudApiTokenToolTipOne": "A service account API token for extracting metadata from dbt Cloud APIs. This token must have the privileges required to read metadata (e.g. <bold>Metadata Only</bold> permissions).",
      "dbtCloudApiTokenToolTipTwo": "For more information about dbt service account tokens, check out the docs <aLink>here</aLink>",
      "dbtCloudCustomMetadataEndpointUrlToolTip": "A custom URL used for extracting Metadata. By default, this metadata is extracted from https://metadata.cloud.getdbt.com/graphql. In most cases, users should NOT need to provide this value.",
      "dbtCloudDataPlatformConnectionTypeToolTip": "The type of Data Platform that dbt is connected to.",
      "dbtCloudDataPlatformInstanceToolTipOne": "The DataHub Platform Instance identifier that should be used for the assets extracted from dbt.",
      "dbtCloudDataPlatformInstanceToolTipThree": "Leave this blank if you have not configured a Data Platform Instance when ingesting from the associated Data Platform.",
      "dbtCloudDataPlatformInstanceToolTipTwo": "This is used to correctly connect the metadata extracted from the Data Platform with that extracted from dbt Cloud.",
      "dbtCloudExtractOwnersToolTip": "Try to extract owners from dbt meta properties. Be careful: This can override Owners added by users of DataHub.",
      "dbtCloudFilterSectionTooltip": "Include or exclude specific dbt Node (resources) from ingestion.",
      "dbtCloudIncludeModelsToolTip": "Whether to include extraction of Models or not.",
      "dbtCloudIncludeSeedsToolTip": "Whether to include extraction of Seeds or not.",
      "dbtCloudIncludeSourcesToolTip": "Whether to include extraction of Sources or not.",
      "dbtCloudIncludeTestDefinitionsToolTip": "Whether to include extraction of Test Definitions or not.",
      "dbtCloudIncludeTestResultsToolTip": "Whether to include extraction of Test Results or not.",
      "dbtCloudJobIDToolTipOne": "The ID of the dbt Cloud job to extract metadata for. Choose the job that serves as the primary mechanism for updating your production data.",
      "dbtCloudJobIDToolTipThree": "Ensure that your job enables documentation generation on each run by enabling 'Generate Docs' on dbt Cloud.",
      "dbtCloudJobIDToolTipTwo": "The Job ID can be found in the URL on the Jobs tab of dbt Cloud.",
      "dbtCloudNodeAllowToolTip": "Only include specific dbt Nodes (resources) by providing their name, or a Regular Expression (REGEX). If not provided, all Nodes will be included.",
      "dbtCloudNodeDenyToolTip": "Exclude specific dbt Nodes (Resources) by providing their name, or a Regular Expression (REGEX). If not provided, all Nodes will be included. Deny patterns always take precedence over Allow patterns.",
      "dbtCloudProjectIDToolTipOne": "The ID of the dbt Cloud project to extract metadata for.",
      "dbtCloudProjectIDToolTipTwo": "This can be found in the URL of your dbt instance: https://cloud.getdbt.com/#/accounts/123/projects/PROJECT_ID.",
      "label": {
        "apiToken": "API Token",
        "customMetadataEndpointUrl": "Custom Metadata Endpoint URL",
        "dataPlatformConnectionType": "Data Platform (Connection Type)",
        "dataPlatformInstance": "Data Platform Instance",
        "includeModels": "Include Models",
        "includeSeeds": "Include Seeds",
        "includeSources": "Include Sources",
        "includeTestDefinitions": "Include Test Definitions",
        "includeTestResults": "Include Test Results",
        "jobID": "Job ID"
      },
      "section": {
        "nodes": "Nodes"
      }
    },
    "duration": "Duration",
    "errorRequestingIngestionRollback": "Error requesting ingestion rollback",
    "executionCount": "Execution Count",
    "ExecutionStatusDisplayText": {
      "cancelled": "Cancelled",
      "failed": "Failed",
      "rollbackFailed": "Rollback Failed",
      "rolledBack": "Rolled Back",
      "rollingBack": "Rolling Back",
      "running": "Running",
      "succeeded": "Succeeded",
      "upForRetry": "Up for Retry"
    },
    "ExecutionSummaryText": {
      "ingestionCompletedWithErrors": "Ingestion completed with errors",
      "ingestionIsInProcessOfRollingBack": "Ingestion is in the process of rolling back",
      "ingestionIsRunning": "Ingestion is running",
      "ingestionRollbackFailed": "Ingestion rollback failed",
      "ingestionStatusNotRecognized": "Ingestion status not recognized",
      "ingestionSuccessfullyCompleted": "Ingestion successfully completed",
      "ingestionWasCancelled": "Ingestion was cancelled",
      "ingestionWasRolledBack": "Ingestion was rolled back"
    },
    "executorId": "Executor Id",
    "failedToCancelExecution": "Failed to cancel execution!",
    "failedToCreateIngestionSource": "Failed to create ingestion source!",
    "failedToCreateSecret": "Failed to create secret",
    "failedToLoadExecutionDetails": "Failed to load execution details",
    "failedToLoadIngestionExecutionAnErrorOccurred": "Failed to load ingestion executions! An unexpected error occurred.",
    "failedToLoadIngestionSourcesAnErrorOccurred": "Failed to load ingestion sources! An unexpected error occurred.",
    "failedToLoadSecrets": "Failed to load secrets!",
    "failedToRemoveIngestionSource": "Failed to remove ingestion source",
    "failedToSubmitIngestionExecutionRequest": "Failed to submit ingestion execution request!",
    "failedToUpdateIngestionSource": "Failed to update ingestion source!",
    "fixLineInYourRecipeWithParsedLine": "Fix line {{parsedLine}} in your recipe",
    "forMoreInformationAboutHowToConfigureARecipeText_component": "For more information about how to configure a recipe, see the <aLink>{{sourceName}} source docs.</aLink>",
    "foundInvalidYamlPleaseCheck": "Found invalid YAML. Please check your recipe configuration.",
    "foundInvalidYamlWithMessage": "Found invalid YAML. {{message}}",
    "foundInvalidYAMLWithMessage": "Found invalid YAML. {{msg}} in order to switch views.",
    "giveThisIngestionSourceAName": "Give this ingestion source a name.",
    "hive": {
      "hiveDatabaseToolTip": "Ingest metadata for a specific Database. If left blank, metadata for all databases will be extracted.",
      "hiveFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "hiveHostPortToolTip": "The host and port where Hive is running. For example, 'hive:9083'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
      "hivePasswordToolTip": "The Hive password for the user.",
      "hiveUsernameToolTip": "The Hive username used to extract metadata."
    },
    "IHaveSetUpLookMLIngestion": "I have set up LookML ingestion!",
    "ingestedAssets": "Ingested Assets",
    "ingestionRunDetails": "Ingestion Run Details",
    "ingestionSourceIngestedFromCLI": "This source is ingested from the command-line interface (CLI)",
    "ingestionSourcesActions": "Create, schedule, and run DataHub ingestion sources.",
    "invalidCronSchedule": "Invalid cron schedule. Cron must be of UNIX form",
    "kafka": {
      "kafkaBootstrapToolTip": "The ‘host[:port]’ string (or list of ‘host[:port]’ strings) that we should contact to bootstrap initial cluster metadata.",
      "kafkaFilterSectionTooltip": "Filter out data assets based on allow/deny regex patterns we match against. Deny patterns take precedence over allow patterns.",
      "kafkaPasswordToolTip": "The SASL Password. Required if the Security Protocol is SASL based. In the Confluent Control Center, you can find this in Cluster > Data Integration > API Keys.",
      "kafkaTopicAllowToolTip": "Provide an optional Regular Expression (REGEX) to include specific Kafka Topic names in ingestion.",
      "kafkaTopicDenyToolTip": "Provide an optional Regular Expression (REGEX) to exclude specific Kafka Topic names from ingestion.",
      "kafkaUsernameToolTip": "The SASL username. Required if the Security Protocol is SASL based. In the Confluent Control Center, you can find this in Cluster > Data Integration > API Keys.",
      "label": {
        "bootstrapServers": "Bootstrap Servers",
        "saslMechanism": "SASL Mechanism",
        "schemaRegistryCredentials": "Schema Registry Credentials",
        "schemaRegistryURL": "Schema Registry URL",
        "securityProtocol": "Security Protocol"
      },
      "saslMechanismToolTip": "The SASL mechanism used for authentication. This field is required if the selected Security Protocol is SASL based.",
      "schemaRegistryCredentialsToolTip": "API credentials for the Schema Registry. In Confluent Control Center, you can find these under Schema Registry > API Credentials.",
      "schemaRegistryURLToolTip": "The URL where the schema Schema Registry is hosted. If provided, DataHub will attempt to extract Avro and Protobuf topic schemas from the registry.",
      "section": {
        "filterByTopic": "Filter by Topic"
      },
      "securityProtocolToolTip": "The Security Protocol used for authentication."
    },
    "lastExecution": "Last Execution",
    "lastStatus": "Last Status",
    "loadingExecutionDetails": "Loading execution details",
    "loadingExecutions": "Loading executions",
    "loadingIngestionSources": "Loading ingestion sources",
    "looker": {
      "label": {
        "baseUrl": "Base URL"
      },
      "lookerAllowChartToolTip": "Only include specific Charts by providing the numeric id of a Chart, or a Regular Expression (REGEX). If not provided, all Charts will be included.",
      "lookerAllowDashboardToolTip": "Only include specific Dashboards by providing the numeric id of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included.",
      "lookerBaseUrlToolTip": "The URL where your Looker instance is hosted.",
      "lookerClientIDToolTip": "Looker API Client ID.",
      "lookerClientSecretToolTip": "Looker API Client Secret.",
      "lookerDenyChartToolTip": "Exclude specific Charts by providing the numeric id of a Chart, or a Regular Expression (REGEX). If not provided, all Charts will be included. Deny patterns always take precendence over Allow patterns.",
      "lookerDenyDashboardToolTip": "Exclude specific Dashboards by providing the numeric id of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included. Deny patterns always take precendence over Allow patterns.",
      "lookerFilterSectionTooltip": "Include or exclude specific Dashboard, Charts from Looker ingestion.",
      "section": {
        "charts": "Charts"
      }
    },
    "lookml": {
      "buttonLabel": {
        "addMapping": "Add mapping"
      },
      "label": {
        "connectionToPlatformMap": "Connection To Platform Map",
        "defaultDatabase": "Default Database",
        "extractExternalLineage": "Extract External Lineage",
        "githubDeployKey": "GitHub Deploy Key",
        "lookerBaseUrl": "Looker Base URL",
        "lookerClientID": "Looker Client ID",
        "lookerClientSecret": "Looker Client Secret",
        "lookmlProjectName": "LookML Project Name"
      },
      "lookmlAdvancedSectionTooltip": "In order to ingest LookML data properly, you must either fill out Looker API client information (Base URL, Client ID, Client Secret) or an offline specification of the connection to platform mapping and the project name (Connection To Platform Map, Project Name).",
      "lookmlConnectionToPlatformMap": "A mapping of Looker connection names to DataHub Data Platform and Database names. This is used to create an accurate picture of the Lineage between LookML models and upstream Data Sources.",
      "lookmlDefaultDatabaseToolTip": "The Database associated with assets from the Looker connection.",
      "lookmlExtractExternalLineage": "Extract lineage between Looker and the external upstream Data Sources (e.g. Data Warehouses or Databases).",
      "lookmlGithubDeployKeyToolTipOne": "An SSH private key that has been provisioned for read access on the GitHub repository where the LookML is defined.",
      "lookmlGithubDeployKeyToolTipTwo": "Learn how to generate an SSH for your GitHub repository <aLink>here</aLink>.",
      "lookmlGithubRepoToolTip": "The name of the GitHub repository where your LookML is defined.",
      "lookmlLookerBaseUrlToolTip": "Optional URL to your Looker instance. This is used to generate external URLs for models in your project.",
      "lookmlLookerClientID": "The Looker API Client ID. Required if Looker Base URL is present.",
      "lookmlLookerClientSecretToolTip": "A Looker API Client Secret. Required if Looker Base URL is present.",
      "lookmlNameToolTip": "Looker connection name. See <aLink>documentation</aLink> for more details.",
      "lookmlPlatformToolTip": "The Data Platform ID in DataHub (e.g. snowflake, bigquery, redshift, mysql, postgres)",
      "lookmlProjectName": "The project name within which the LookML files live. See <aLink>this document</aLink> for more details. Required if Looker Base URL is not present."
    },
    "lookMlIngestionCannotText_component": "LookML ingestion <bold>cannot</bold> currently be performed via UI-based ingestion. This is a known problem the DataHub team is working to solve!",
    "manageIngestion": "Manage Ingestion",
    "manualExecution": "Manual Execution",
    "mariaDB": {
      "mariaDBFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "mariaDBHostAndPortToolTip": "The host and port where MariaDB is running. For example, 'mariadb-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
      "mariaDBPasswordToolTip": "The MariaDB password for the user.",
      "mariaDBUsernameToolTip": "The MariaDB username used to extract metadata."
    },
    "minuteHourDayMonthDayOfWeek": "$t(common.minute), $t(common.hour), $t(common.day), $t(common.month), $t(common.dayOfWeek)",
    "mssql": {
      "mssqlFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "mssqlHostAndPortToolTip": "The host and port where SQL Server is running. For example, 'mssql-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
      "mssqlPasswordToolTip": "The SQL Server password for the user.",
      "mssqlUsernameToolTip": "The SQL Server username used to extract metadata."
    },
    "mysql": {
      "mysqlFilterSectionTooltip": "Include or exclude specific Databases, Schemas, Tables and Views from ingestion.",
      "mysqlHostAndPortToolTip": "The host and port where Postgres is running. For example, 'localhost:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
      "mysqlPasswordToolTip": "The MySQL password for the user.",
      "mysqlUsernameToolTip": "The MySQL username used to extract metadata."
    },
    "noAssetsWereIngested": "No assets were ingested.",
    "noExecutionFound": "No Executions found!",
    "noIngestionSource": "No Ingestion Sources!",
    "noOutputFound": "No output found.",
    "noSecretsFound": "No Secrets found",
    "pleaseAddValidIngestionType": "Please add valid ingestion type",
    "pleaseCheckYourRecipeConfiguration": "Please check your recipe configuration.",
    "pleaseFixRecipeLineWithParsedLine": "Please fix line {{parsedLine}} in your recipe.",
    "pleaseFixYourRecipe": "Please fix your recipe",
    "postgres": {
      "postgresFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "postgresHostAndPortToolTip": "The host and port where Postgres is running. For example, 'postgres:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
      "postgresPasswordToolTip": "The Postgres password for the user.",
      "postgresUsernameToolTip": "The Postgres username used to extract metadata."
    },
    "powerBI": {
      "label": {
        "extractEndorsementsAsTags": "Extract Endorsements as Tags",
        "extractOwnership": "Extract Ownership",
        "includeReports": "Include Reports",
        "includeWorkspace": "Include Workspaces",
        "tenantID": "Tenant ID",
        "useAdminAPIOnly": "Use Admin APIs Only"
      },
      "powerBIAllowPatternToolTip": "Only include specific Workspaces by providing the unique id of a Workspace, or a Regular Expression (REGEX). If not provided, all Workspaces will be included.",
      "powerBIAzureClientIDToolTip": "The Azure AD Client ID",
      "powerBIAzureClientSecretToolTip": "The Azure AD Client Secret",
      "powerBIAzureTenantIDToolTip": "The Azure tenant id for your PowerBI instance.",
      "powerBIDenyPatternToolTip": "Exclude specific Workspaces by providing the unique id of a Workspace, or a Regular Expression (REGEX). If not provided, all Workspaces will be included. Deny patterns always take precendence over Allow patterns.",
      "powerBIExtractEndorsementsAsTagsToolTip": "Extract PowerBI Endorsements as DataHub Tags.",
      "powerBIExtractOwnershipToolTip": "Extract Owner Metadata defined inside PowerBI. Admin API access is required if this setting is enabled. Note that enabling this may overwrite owners that you add inside DataHub.",
      "powerBIFilterSectionTooltip": "Include or exclude specific PowerBI Workspaces from ingestion.",
      "powerBIIncludeLineageToolTip": "Extract lineage between PowerBI Datasets and the External Tables from which they are derived.",
      "powerBIIncludeReportsToolTip": "Extract PowerBI Reports as Dashboard nodes in DataHub.",
      "powerBIIncludeWorkspaceToolTip": "Extract PowerBI Workspaces as Container nodes in DataHub.",
      "powerBIUseAdminAPIOnlyToolTip": "Only use the Admin APIs for extracting information from PowerBI. See the DataHub Ingestion Source Guide for more information.",
      "section": {
        "workspaces": "Workspaces"
      }
    },
    "provideTheExecutorIDToRouteRequestToText": "Provide the executor id to route execution requests to. The built-in DataHub executor id is 'default'. Do not change this unless you have configured a custom executor.",
    "recipeForms": {
      "buttonLabel": {
        "addPatterns": "Add Patterns"
      },
      "label": {
        "accountID": "Account ID",
        "allowPatterns": "Allow Patterns",
        "clientID": "Client ID",
        "clientSecret": "Client Secret",
        "database": "Database",
        "denyPatterns": "Deny Patterns",
        "extractOwners": "Extract Owners",
        "githubRepo": "GitHub Repo",
        "hostAndPort": "Host and Port",
        "includeLineage": "Include Lineage",
        "password": "Password",
        "projectID": "Project ID",
        "username": "Username"
      },
      "presto": {
        "prestoFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
        "prestoHostAndPortToolTip": "The host and port where Presto is running. For example, 'presto-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
        "prestoPasswordTooTip": "The Presto password for the user.",
        "prestoUsernameToolTip": "The Presto username used to extract metadata."
      },
      "redshift": {
        "redshiftFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
        "redshiftHostAndPortToolTip": "The host and port where Redshift is running. For example, 'redshift:5439'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
        "redshiftPasswordToolTip": "The password of the username.",
        "redshiftUsernameToolTip": "A Redshift username used to extract metadata."
      },
      "section": {
        "dashboards": "Dashboards",
        "tables": "Tables"
      },
      "snowFlake": {
        "label": {
          "role": "Role",
          "warehouse": "Warehouse"
        },
        "snowFlakeAccountIDToolTip": "The Snowflake Account Identifier e.g. myorg-account123, account123-eu-central-1, account123.west-us-2.azure",
        "snowFlakeFilterSectionTooltip": "Include or exclude specific Databases, Schemas, Tables and Views from ingestion.",
        "snowFlakePasswordToolTip": "Snowflake password.",
        "snowFlakeRoleToolTip": "The Role to use when extracting metadata from Snowflake.",
        "snowFlakeUsernameToolTip": "Snowflake username.",
        "snowFlakeWarehouseToolTip": "The name of the Snowflake Warehouse to extract metadata from."
      },
      "tableau": {
        "buttonLabel": {
          "addProject": "Add project"
        },
        "label": {
          "hostURL": "Host URL",
          "projects": "Projects",
          "tableauSite": "Tableau Site",
          "tokenName": "Token Name",
          "tokenValue": "Token Value"
        },
        "tableauHostUrlToolTip": "The URL where the Tableau instance is hosted.",
        "tableauPasswordToolTip": "Tableau password. Only required if Token is not provided.",
        "tableauProjectToolTip": "The list of Projects to extract metadata for.",
        "tableauSiteToolTip": "The Tableau Site. Required for Tableau Online. Leave this blank to extract from the default site on Tableau Server.",
        "tableauTokenValueToolTip": "The value of the Personal Access Token used to extract metadata. Required if authenticating using a Personal Access Token.",
        "tableauUsernameToolTip": "Tableau username. Only required if Token is not provided.",
        "tokenNameToolTip": "The name of the Personal Access Token used to extract metadata. Required if authenticating using a Personal Access Token."
      },
      "toolTip": {
        "ingestMetadataForASpecificDatabase": "Ingest metadata for a specific Database."
      },
      "trino": {
        "trinoFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
        "trinoHostAndPortToolTip": "The host and port where Trino is running. For example, 'trino-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc).",
        "trinoPasswordToolTip": "The Trino password for the user.",
        "trinoUsernameToolTip": "The Trino username used to extract metadata."
      },
      "unityCatalog": {
        "includeColumnLineageLabel": "Include Column Lineage",
        "includeColumnLineageToolTip_component": "Extract Column Lineage from Unity Catalog. Note that this requires that your Databricks accounts meets certain requirements. View them <aLink>here.</aLink> Enabling this feature may increase the duration of ingestion.",
        "includeTableLineageLabel": "Include Table Lineage",
        "includeTableLineageToolTip_component": "Extract Table Lineage from Unity Catalog. Note that this requires that your Databricks accounts meets certain requirements. View them <aLink>here</aLink>",
        "section": {
          "catalogs": "Catalogs",
          "metastores": "Metastores"
        },
        "tokenToolTip": "A personal access token associated with the Databricks account used to extract metadata.",
        "unityCatalogAllowToolTip": "Only include specific Catalogs by providing the name of a Catalog, or a Regular Expression (REGEX) to include specific Catalogs. If not provided, all Catalogs will be included.",
        "unityCatalogDenyToolTip": "Exclude specific Catalogs by providing the name of a Catalog, or a Regular Expression (REGEX) to exclude specific Catalogs. If not provided, all Catalogs will be included. Deny patterns always take precedence over Allow patterns.",
        "unityFilterSectionTooltip": "Include or exclude specific Metastores, Catalogs, Schemas, and Tables from ingestion.",
        "unityMetaStoreIDAllowButtonLabel": "Add pattern",
        "unityMetaStoreIDAllowToolTip": "Only include specific Metastores by providing the id of a Metastore, or a Regular Expression (REGEX) to include specific Metastores. If not provided, all Metastores will be included.",
        "unityMetaStoreIDDenyToolTip": "Exclude specific Metastores by providing the id of a Metastores, or a Regular Expression (REGEX). If not provided, all Metastores will be included. Deny patterns always take precedence over Allow patterns.",
        "unityTableAllowToolTip": "Only include specific Tables by providing the fully-qualified name of a Table, or a Regular Expression (REGEX) to include specific Tables. If not provided, all Tables will be included.",
        "unityTableDenyToolTip": "Exclude specific Tables by providing the fully-qualified name of a Table, or a Regular Expression (REGEX) to exclude specific Tables. If not provided, all Tables will be included. Deny patterns always take precedence over Allow patterns.",
        "workspaceURLLabel": "Workspace URL",
        "workspaceURLTooltip": "The URL for the Databricks workspace from which to extract metadata."
      }
    },
    "recipeViewModalTitle": "View Ingestion Recipe",
    "removedIngestionSource": "Removed ingestion source.",
    "requestedAt": "Requested At",
    "requestingRollback": "Requesting rollback",
    "runAScheduleToolTip": "Enable to run ingestion on a schedule. Running ingestion on a schedule helps to keep the information inside of DataHub up to date.",
    "runIngestionWithoutASchedule": "Running ingestion without a schedule may result in out-of-date information.",
    "runOnASchedule": "Run on a schedule",
    "scheduledExecution": "Scheduled Execution",
    "searchIngestionSources": "Search ingestion sources",
    "searchSecrets": "Search secrets...",
    "searchSources": "Search sources",
    "secretDescriptionDescription": "An optional description to help keep track of your secret.",
    "secretDescriptionInputPlaceholder": "A description for your secret",
    "secretFieldToolTip_component": "This field requires you to use a DataHub Secret. For more information on Secrets in DataHub, please review <aLink>the docs</aLink>.",
    "secretNameDescription": "Give your secret a name. This is what you'll use to reference the secret from your recipes.",
    "secretNameInputPlaceholder": "A name for your secret",
    "secretNameNotAllowed": "This secret name is not allowed.",
    "secretNameRulePlaceHolder": "Enter a name.",
    "secretValueDescription": "The value of your secret, which will be encrypted and stored securely within DataHub.",
    "secretValueInputPlaceholder": "The value of your secret",
    "secretValueRulePlaceholder": "Enter a value.",
    "somethingWentWrongWithYourConnectionTest": "Something went wrong with your connection test. Please check your recipe and try again.",
    "startedAt": "Started At",
    "step": {
      "chooseType": "Choose Type",
      "configureRecipe": "Configure Recipe",
      "finishUp": "Finish up",
      "scheduleIngestion": "Schedule Ingestion"
    },
    "successfullyCreatedIngestionSource": "Successfully created ingestion source!",
    "successfullyRequestedIngestionRollback": "Successfully requested ingestion rollback",
    "successfullySubmittedCancellationRequest": "Successfully submitted cancellation request!",
    "successfullySubmittedIngestionExecutionRequest": "Successfully submitted ingestion execution request!",
    "successfullyUpdatedIngestionSource": "Successfully updated ingestion source!",
    "testConnection": "Test Connection",
    "testingYourConnection": "Testing your connection...",
    "theFollowingAssetTypesWereIngestedDuringThisRun": "The following asset types were ingested during this run.",
    "theFollowingConnectorCapabilitiesAreSupportedWithYourCredentials": "The following connector capabilities are supported with your credentials",
    "thereWasAnUnexpectedErrorWhenTryingToTestYourConnection": "There was an unexpected error when trying to test your connection. Please try again.",
    "thisCouldTakeAFewMinutes": "This could take a few minutes.",
    "toCompleteTheLookerIntegrationTextWithLink_component": "To complete the Looker integration (including Looker views and lineage to the underlying warehouse tables), you must <bold>also</bold> use the <link></link>.",
    "ToGetCompleteLookerMetadataIntegrationText_component": "To get complete Looker metadata integration (including Looker views and lineage to the underlying warehouse tables), you must <bold>also</bold> use the <aLink>DataHub lookml module</aLink>.",
    "ui": "UI",
    "viewLogsThatWereCollectedDuringTheIngestionRun": "View logs that were collected during the ingestion run.",
    "youMustAcknowledgeThisMessageToProceed": "You must acknowledge this message to proceed!"
  },
  "lineage": {
    "addEntityPlaceHolderSecondPartWhenNoLength": "entities to add...",
    "clickToRefreshData": "Click to refresh data",
    "clickToSeeColumnPathFrom_interval": "(0-1)[Click to see column path from ];(2-inf)[Click to see column paths from ]",
    "collapseRelatedEntitiesIntoASingleLineageNode": "Collapses related entities into a single lineage node",
    "columnLineage": "Column Lineage",
    "compressLineage": "Compress Lineage",
    "dashboardHasNoDownstreamLineage": "Dashboard entities have no downstream lineage",
    "entityDistanceFrom_withName": "This entity is a {{distance}} degree connection to {{name}}",
    "entityDistanceFrom_withoutName": "This entity is a {{distance}} degree connection to the source entity",
    "filterLineageByObservedDate": "Filter lineage edges by observed date",
    "findColumn": "Find column...",
    "focusOnEntity": "Focus on Entity",
    "focusOnThisEntityToMakeEdit_component": "<wrapper>Focus</wrapper> on this entity to make {{direction}} edits.",
    "hideColumnLevelLineage": "Hide column level lineage",
    "manageLineageWithDirection": "Manage {{direction}} Lineage",
    "noEntitiesWithDirection": "No {{direction}}} entities",
    "noTimeRangeSelected": "No time range selected",
    "ordinalSuffix": [
      "th",
      "st",
      "nd",
      "rd"
    ],
    "platformLogo": "Platform Logo",
    "seeColumnLineage": "See Column Lineage",
    "showColumnLevelLineage": "Show column level lineage",
    "showColumns": "Show Columns",
    "showFullTitle": "Show Full Titles",
    "viewGraph": "View Graph",
    "visualizeLineage": "Visualize Lineage",
    "youAreNOtAuthToEditLineage": "You aren't authorized to edit lineage for this entity."
  },
  "navigation": {
    "backToHome": "Back to Home",
    "hidePanel": "Hide the navigation panel",
    "openPanel": "Open the navigation panel",
    "viewInWithName": "View in {{name}}",
    "viewLink": "View link",
    "yourProfile": "Your Profile"
  },
  "onBoarding": {
    "businessGlossary": {
      "businessGlossaryCreateTerm_component": "<paraph>Click here to create a new <bold>Term</bold>.</paraph><paraph><bold>Terms</bold> are words or phrases with a specific business definition assigned to them.</paraph>",
      "businessGlossaryCreateTermGroup_component": "<paraph>Click here to create a new <bold>Term Group</bold>.</paraph><paraph><bold>Term Groups</bold> act as folders, containing Terms and nested Term Groups.</paraph><paraph>For example, there could be a <bold>PII Term Group</bold> containing Terms for different types of PII, such as <bold>Email</bold> or <bold>Phone Number</bold>.</paraph><paraph>Learn more about the <bold>Business Glossary</bold> <aLink>here.</aLink></paraph>",
      "businessGlossaryCreateTermGroupTitle": "Glossary Term Groups",
      "businessGlossaryCreateTermTitle": "Glossary Terms",
      "businessGlossaryIntro_component": "<paraph>Welcome to the <bold>Business Glossary</bold>!</paraph><paraph>The Glossary is a collection of structured, standarized labels you can use to categorize data assets. You can view and create both <bold>Terms</bold> and <bold>Term Groups</bold> here.</paraph>",
      "businessGlossaryIntroTitle": "Business Glossary 📖"
    },
    "domains": {
      "createDomains_component": "Click here to create a new <bold>Domain</bold>.",
      "createDomainTitle": "Create a new Domain",
      "domainIntro_component": "<paraph>Welcome to DataHub <bold>Domains</bold>!</paraph><paraph><bold>Domains</bold> are collections of related data assets associated with a specific part of your organization, such as the <bold>Marketing</bold> department.</paraph><paraph>Learn more about <bold>Domains</bold> <aLink>here.</aLink></paraph>"
    },
    "entityProfile": {
      "documentation_component": "<paraph>You can view and edit an entity's <bold>Documentation</bold> on this tab.</paraph><paraph><bold>Documentation</bold> should provide descriptive information about this data asset. It can also contain links to external resources.</paraph>",
      "documentationTitle": "Documentation",
      "domains_component": "<paraph>You can view and set this asset's <bold>Domain</bold> here.</paraph><paraph><bold>Domains</bold> are collections of related data assets associated with a specific part of your organization, such as the <bold>Marketing</bold> department.</paraph><paraph>Learn more about <bold>Domains</bold> <aLink>here.</aLink></paraph>",
      "entities_component": "You can view the <bold>Entities</bold> that belong to a <bold>Container</bold> on this tab.",
      "entitiesTitle": "Entities Tab",
      "glossaryTerm_component": "<paraph>You can view and add <bold>Glossary Terms</bold> to this asset here.</paraph><paraph><bold>Glossary Terms</bold> are structured, standarized labels for organizing your mission-critical data. For example, if you're marking assets containing PII fields, you might add the Term <bold>Email</bold>.</paraph><paraph>Learn more about <bold>Glossary Terms</bold> <aLink>here.</aLink></paraph>",
      "lineage_component": "<paraph>You can view an entity's <bold>Lineage</bold> on this tab.</paraph><paraph>Data <bold>Lineage</bold> allows you to visualize and understand both the upstream dependencies and downstream consumers of this entity.</paraph><paraph>If this tab is disabled, <bold>Lineage</bold> have not been ingested for this entity.</paraph>",
      "lineageTitle": "Lineage Tab",
      "owners_component": "<paraph>You can view and add <bold>Owners</bold> to this asset here.</paraph><paraph><bold>Owners</bold> are <bold>Users</bold> or <bold>Groups</bold> who are responsible for managing this asset.</paraph>",
      "properties_component": "<paraph>You can view an entity's key-value <bold>Properties</bold> on this tab. These are sourced from the original Data Platform.</paraph><paraph>If this tab is disabled, <bold>Properties</bold> have not been ingested for this entity.</paraph>",
      "propertiesTitle": "Properties Tab",
      "schema_component": "<paraph>You can view a Dataset's <bold>Schema</bold> on this tab.</paraph><paraph>You can also view or add <bold>Documentation</bold>, <bold>Tags</bold>, and <bold>Glossary Terms</bold> for specific columns.</paraph>",
      "schemaTitle": "Schema Tab",
      "tags_component": "<paraph>You can view and add <bold>Tags</bold> to this asset here.</paraph><paraph><bold>Tags</bold> are labels for organizing your data. For example, you can add a Tag to mark an asset as <bold>Mission Critical</bold>.</paraph><paraph>Learn more about <bold>Tags</bold> <aLink>here.</aLink></paraph>"
    },
    "groups": {
      "createGroups_component": "Click here to create a new <bold>Group</bold>.",
      "createGroupsTitle": "Create a new Group",
      "groupsIntro_component": "<paraph>Welcome to Datahub <bold>Groups</bold>!</paraph><paraph><bold>Groups</bold> are collections of users which can be used to assign ownership to assets and manage access.</paraph><paraph><bold>Groups</bold> can be created natively within DataHub, or synced from your Identity Provider.</paraph><paraph>Learn more about <bold>Groups</bold> <aLink>here.</aLink></paraph>"
    },
    "homePage": {
      "domains_component": "Here are your organization's <bold>Domains</bold>. Domains are collections of data assets - such as Tables, Dashboards, and ML Models - that make it easy to discover information relevant to a particular part of your organization.",
      "domainsTitle": "Explore by Domain",
      "ingestion_component": "Start integrating your data sources immediately by navigating to the <bold>Ingestion</bold> page.",
      "ingestionTitle": "Ingest Data",
      "mostPopular_component": "Here you'll find the assets that are viewed most frequently within your organization.",
      "mostPopularTitle": "Explore Most Popular",
      "platforms_component": "Here are your organization's <bold>Data Platforms</bold>. Data Platforms represent specific third-party Data Systems or Tools. Examples include Data Warehouses like <bold>Snowflake</bold>, Orchestrators like <bold>Airflow</bold>, and Dashboarding tools like <bold>Looker</bold>.",
      "platformsTitle": "Explore by Platform",
      "searchBar_component": "<paraph>This is the <bold>Search Bar</bold>. It will serve as your launch point for discovering and collaborating around the data most important to you.</paraph><paraph>Not sure where to start? Click on <bold>Explore All</bold>!</paraph>",
      "searchBarTitle": "Find your Data 🔍",
      "welcomeParaph": {
        "getStarted_component": "Let's get started! 🚀",
        "intro_component": "<bold>DataHub</bold> helps you discover and organize the important data within your organization. You can:",
        "listFeatures": {
          "defineOwnership_component": "Define <bold>ownership</bold> and capture <bold>knowledge</bold> to empower others",
          "gainInsight_component": "Gain <bold>insights</bold> about how others within your organization are using data",
          "quicklySearch_component": "Quickly <bold>search</bold> for Datasets, Dashboards, Data Pipelines, and more",
          "viewAndUnderstand_component": "View and understand the full <bold>end-to-end Lineage</bold> of how data is created, transformed, and consumed"
        },
        "pressKey_component": "Press <bold> Cmd + Ctrl + T</bold> to open up this tutorial at any time."
      },
      "welcomeTitle": "Welcome to DataHub! 👋"
    },
    "ingestion": {
      "ingestionCreate_component": "<paraph>Configure new Integrations from DataHub to your <bold>Data Platforms</bold>, including Transactional Databases like <bold>MySQL</bold>, Data Warehouses such as <bold>Snowflake</bold>, Dashboarding tools like <bold>Looker</bold>, and more!</paraph><paraph>Learn more about ingestion and view the full list of supported Integrations <aLink>here.</aLink></paraph>",
      "ingestionCreateTitle": "Create a new Ingestion Source",
      "ingestionRefreshSource_component": "Click to force a refresh of running ingestion sources.",
      "ingestionRefreshSourceTitle": "Refresh Ingestion Sources"
    },
    "letsGo": "Let's go!",
    "lineageGraph": {
      "introLineageGraph_component": "<paraph>You can view the <bold>Lineage Graph</bold> for an entity on this page.</paraph><paraph>Data <bold>Lineage</bold> allows you to visualize and understand both the upstream dependencies and downstream consumers of this entity.</paraph><paraph>Learn more about <bold>Lineage</bold> <aLink>here.</aLink></paraph>",
      "introLineageGraphTitle": "Lineage Graph",
      "timeFilter_component": "You can click which dates you would like to see lineage edges for on this graph. By default, the graph will show edges observed in the last 14 days. Note that manual lineage edges and edges without time information will always be shown.",
      "timeFilterTitle": "Filter Lineage Edges by Date"
    },
    "policies": {
      "createPolicies_component": "Click here to create a new <bold>Policy</bold>.",
      "createPoliciesTitle": "Create a new Policy",
      "introPolicies_component": "<paraph>Welcome to DataHub <bold>Policies</bold>!</paraph><paraph>In most cases, <bold>Roles</bold> are the best option for granting privileges to DataHub users.</paraph><paraph>When more fine-grained control over user and group permissions is required, then <bold>Policies</bold> will do the trick.</paraph><paraph>Learn more about <bold>Policies</bold> <aLink>here.</aLink></paraph>"
    },
    "roles": {
      "introID_component": "<paraph>Welcome to DataHub <bold>Roles</bold>!</paraph><paraph><bold>Roles</bold> are the recommended way to manage permissions on DataHub.</paraph><paraph>DataHub currently supports three out-of-the-box Roles: <bold>Admin</bold>, <bold>Editor</bold> and <bold>Reader</bold>.</paraph><paraph>Learn more about <bold>Roles</bold> and the different permissions for each Role <aLink>here.</aLink></paraph>"
    },
    "search": {
      "searchResultAdvancedSearch_component": "<bold>Advanced Filters</bold> offer additional capabilities to create more specific search queries.",
      "searchResultAdvancedSearchTitle": "💪 Dive deeper with advanced filters",
      "searchResultBrowse_component": "Have a clear idea of the schema or folder you're searching for? Easily navigate your organization's platforms inline. Then select a specific container you want to filter your results by.",
      "searchResultBrowseTitle": "🧭 Explore and refine your search by platform",
      "searchResultFilter_component": "Quickly find relevant assets by applying one or more filters. Try filtering by <bold>Type</bold>, <bold>Owner</bold>, and more!",
      "searchResultFilterTitle": "🕵️ Narrow your search",
      "searchResultFilterV2_component": "Quickly find relevant assets with our new and improved filter interface! Our latest update has relocated filters to the top of the screen for ease of access.",
      "searchResultFilterV2Title": "Filters Have Moved"
    },
    "users": {
      "usersAssignRoleID_component": "<paraph>You can assign <bold>Roles</bold> to existing <bold>Users</bold> here.</paraph><paraph>Learn more about <bold>Roles</bold> <aLink> here.</aLink></paraph>",
      "usersAssignRoleIDTitle": "Assigning Roles",
      "usersIntro_component": "<paraph>Welcome to DataHub <bold>Users</bold>!</paraph><paraph>There are a few different ways to onboard new <bold>Users</bold> onto DataHub.</paraph>",
      "usersInviteLink_component": "<paraph>Easily share an invite link with your colleagues to onboard them onto DataHub. Optionally assign a <bold>Role</bold> to anyone who joins using the link.</paraph><paraph>Learn more about configuring invite links <aLink> here.</aLink></paraph>",
      "usersInviteLinkTitle": "Invite New Users",
      "usersSSO_component": "<paraph>The preferred way to onboard new <bold>Users</bold> is to use <bold>Single Sign-On</bold>.Currently, DataHub supports OIDC SSO.</paraph><paraph>Learn more about how to configure <bold>Single Sign-On</bold> <aLink> here.</aLink></paraph>",
      "usersSSOTitle": "Configuring Single Sign-On (SSO)"
    }
  },
  "operation": {
    "fetchingRuns": "Fetching runs",
    "runId": "Run ID",
    "viewTaskRunDetails": "View task run details"
  },
  "ownerType": {
    "BUSINESS_OWNER": {
      "description": "Principle stakeholders or domain experts associated with the asset.",
      "name": "Business Owner"
    },
    "DATA_STEWARD": {
      "description": "Involved in governance of the asset.",
      "name": "Data Steward"
    },
    "NONE": {
      "description": "No ownership type specified.",
      "name": "None"
    },
    "TECHNICAL_OWNER": {
      "description": "Involved in the production, maintenance, or distribution of the asset.",
      "name": "Technical Owner"
    }
  },
  "permissions": {
    "appliesTo": "Applies to",
    "appliesToWithName": "Applies to {{name}}",
    "areYouSureRemovePolicy": "Are you sure you want to remove policy?",
    "assignedRoleToUsers": "Assigned Role to users!",
    "assignRoleToUsers": "Assign the {{role}} role to users",
    "associatedPolicies": "Associated Policies",
    "createANewPolicy": "Create a new Policy",
    "createNewPolicy": "Create new policy",
    "domainDescription": "Search for domains the policy should apply to. If <bold>none</bold> is selected, policy is applied to <bold>all</bold> resources in all domains.",
    "editAPolicy": "Edit a Policy",
    "exitPolicyEditorContent": "Are you sure you want to exit policy editor? All changes will be lost",
    "exitPolicyEditorTitle": "Exit Policy Editor",
    "failedToLoadPolicies": "Failed to load policies! An unexpected error occurred.",
    "failedToUpdatePolicies": "Failed to update policies. An unexpected error occurred.",
    "loadingPolicies": "Loading policies...",
    "managePermissions": "Manage Permissions",
    "managePermissionsDescription": "View your DataHub permissions. Take administrative actions.",
    "nameForNewPolicy": "A name for your new policy.",
    "newPolicyDescription": "An optional description for your new policy.",
    "noAssignedUsers": "No assigned users",
    "noPolicies": "No Policies!",
    "noRole": "No Role",
    "noRoles": "No Roles",
    "noSearchResultsFound": "No search results found",
    "permissionsTabTypes": {
      "policies": "Policies",
      "roles": "Roles"
    },
    "policyAppliesToDescription": "Whether this policy should be apply to owners of the Metadata asset. If true, those who are marked as owners of a Metadata Asset, either directly or indirectly via a Group, will have the selected privileges.",
    "policyAppliesToGroupsDescription": "Search for specific groups that this policy should apply to, or select `All Groups` to apply it to all groups.",
    "policyAppliesToLabel": "Select the users & groups that this policy should apply to.",
    "policyAppliesToUserDescription": "Search for specific users that this policy should apply to, or select `All Users` to apply it to all users.",
    "policyBuilderSteps": {

      "assignUserAndGroups": "Assign Users & Groups",
      "choosePolicyType": "Choose Policy Type",
      "configurePrivileges": "Configure Privileges"
    },
    "privilegesLabel": "Select a set of privileges to permit.",
    "resourceDescription": "Search for specific resources the policy should apply to. If <bold>none</bold> is selected, policy is applied to <bold>all</bold> resources of the given type.",
    "resourceTypeDescription": "Select the types of resources this policy should apply to. If <bold>none</bold> is selected, policy is applied to <bold>all</bold> types of resources.",
    "searchPolicies": "Search policies...",
    "successfullyActivatedPolicy": "Successfully activated policy.",
    "successfullyDeactivatedPolicy": "Successfully deactivated policy.",
    "successfullyRemovedPolicy": "Successfully removed policy.",
    "successfullySavedPolicy": "Successfully saved policy.",
    "typeOfPolicyDescriptionPlatform_component": "The <bold>Platform</bold> policy type allows you to assign top-level DataHub Platform privileges to users.These include managing users and groups, creating policies, viewing analytics dashboards and more.<br /><br />",
    "typeOfPolicyDescriptionMetadata_component": "The <bold>Metadata</bold> policy type allows you to assign metadata privileges to users. These include the ability to manipulate metadata like ownership, tags, documentation associated with Datasets, Charts, Dashboards, & more.",
    "typeOfPolicyToCreate": "The type of policy you would like to create."
  },
  "placeholder": {
    "addDescriptionForNewTag": "Add a description for your new tag...",
    "dataAnalyst": "Data Analyst",
    "datasetsDashboardsChartsAndMore": "Datasets, Dashboards, Charts, and more...",
    "domainDescription": "A description for your domain",
    "domainDescriptionPlaceHolder": "Apply to ALL domains by default. Select domains to apply to specific domains.",
    "domainName": "A name for your Domain",
    "filterWithName": "Filter {{name}}...",
    "groupDescription": "A description for your group",
    "groupName": "A name for your group",
    "newPolicyDescriptionPlaceHolder": "Your policy description",
    "resourceDescriptionPlaceHolder": "Apply to ALL resources by default. Select specific resources to apply to.",
    "resourceTypeDescriptionPlaceHolder": "Apply to ALL resource types by default. Select types to apply to specific types of entities.",
    "revenueDashboards": "Revenue Dashboards",
    "searchByWithName": "Search by {{name}}...",
    "searchFor": "Search for",
    "searchForUsersOrGroups": "Search for users or groups",
    "searchForWithName": "Search for {{name}}...",
    "searchInWithName": "Search in {{name}}...",
    "searchWithName": "Search {{name}}...",
    "selectAColumn": "Select column",
    "shortLabelForLink": "A short label for this link",
    "viewUsefulForDataAnalysts": "This View is useful for Data Analysts",
    "yourPolicyNamePlaceholder": "Your policy name"
  },
  "post": {
    "descriptionDescription": "The main content for your new post.",
    "descriptionPlaceholder": "Your post description",
    "imageUrl": "Image URL",
    "imageUrlDescription": "A URL to an image you want to display on your link post.",
    "imageUrlPlaceholder": "Your post image URL",
    "linkUrl": "Link URL",
    "linkUrlDescription": "Where users will be directed when they click this post.",
    "linkUrlPlaceholder": "Your post link URL",
    "postType": "Post Type",
    "titleDescription": "The title for your new post.",
    "titlePlaceholder": "Your post title"
  },
  "relatedTermType": {
    "containedBy": "Contained by",
    "contains": "Contains",
    "inheritedBy": "Inherited by",
    "inherits": "Inherits"
  },
  "reporting": {
    "closeColumnHistory": "Close column history",
    "columnCount": "Column Count",
    "columnCountOverTime": "Column Count Over Time",
    "columnCountUnknown": "Column Count Unknown",
    "columnStats": "Column Stats",
    "createdOnDateWithText": "Created {{text}} on {{date}}",
    "createdOnWithDate": "Created on {{date}}",
    "distinctCount": "Distinct Count",
    "distinctCountOverTime": "Distinct Count Over Time",
    "distinctPercent": "Distinct %",
    "distinctPercentageOverTime": "Distinct Percentage Over Time",
    "firstReportedOn": "First reported on {{date}}",
    "historicalColumnStats": "Historical Column Stats",
    "historicalTableStats": "Historical Table Stats",
    "lastObservedDate": "Last observed {{date}}",
    "lastObservedOnDate": "Last observed on {{date}}",
    "lastRunWithTime": "Last run {{time}}",
    "lastSynchronized": "Last Synchronized",
    "lastSynchronizedDescriptionBeforePlatform": "This represents the time that the entity was last synchronized with ",
    "lastSynchronizedDescriptionNoPlatform": "This represents the time that the entity was last synchronized with the source platform",
    "lastSynchronizedDescriptionWithPlatform": "This represents the time that the entity was last synchronized with the platform",
    "lastSynchronizedWithNameAndTime_component": "This {{name}} was last synchronized at <b>{{time}}</b>",
    "latestStats": "Latest Stats",
    "mean": "Mean",
    "median": "Median",
    "nullCount": "Null Count",
    "nullCountOverTime": "Null Count Over Time",
    "nullPercent": "Null %",
    "nullPercentageOverTime": "Null Percentage Over Time",
    "profilingHistory": "Profiling History",
    "profilingRuns": "Profiling Runs",
    "queryByMonth_interval": "(0-1)[{{count}} query / month];(2-inf)[{{count}} queries / month;]",
    "recentProfiles": "Recent Profiles",
    "relationshipAddedByUser_component": "Relationship added by <bold>{{userName}}</bold>",
    "relationshipAddedByUserOnDate_component": "Relationship added by <bold>{{userName}}</bold> on <bold>{{date}}</bold>",
    "reportedOnAtWithDateTime": "Reported on {{date}} at {{time}}",
    "reportedWithDate": "Reported {{date}}",
    "rowCount": "Row Count",
    "rowCountOverTime": "Row Count Over Time",
    "rowCountUnknown": "Row Count Unknown",
    "sampleValues": "Sample Values",
    "showingProfileFromAtWithDateTime": "Showing profile from {{date}} at {{time}}",
    "stdDev": "Std. Dev",
    "synchronizedInThePastMonth_component": "Synchronized in the <b>past month</b>",
    "synchronizedInThePastWeek_component": "Synchronized in the <b>past week</b>",
    "synchronizedMoreThanAMonthAgo_component": "Synchronized <b>more than a month ago</b>",
    "synchronizedOnWithTime": "Synchronized on {{time}}",
    "tableStats": "Table Stats",
    "viewBlamePriorToThisVersion": "View blame prior to this version",
    "viewColumnHistory": "View column history",
    "viewingProfilingHistoryForThePast": "Viewing profiling history for the past",
    "viewingStatsForColumn": "Viewing stats for column"
  },
  "search": {
    "chooseAnOwnerType": "Choose an owner type",
    "didYouMean_component": "Did you mean <suggest>{{suggestText}}</suggest>",
    "exploreAll": "Explore all",
    "loadResultError": "Failed to load results",
    "modal": {
      "exitSelectionContent_interval": "(0-1)[Are you sure you want to exit? {{count}} selection will be cleared.];(2-inf)[Are you sure you want to exit? {{count}} selections will be cleared.];",
      "exitSelectionTitle": "Exit Selection"
    },
    "moreYouMayBeInterestedIn": "More you may be interested in",
    "noResultsFoundFor": "No results found for '{{name}}'",
    "orSearchingFor_component": " or searching for <suggest>{{suggestText}}</suggest>",
    "searchError": "Failed to complete search",
    "seeAllResultsWithName_component": "See all <bold>{{name}}</bold> results",
    "selectWithName": "Select {{name}}",
    "showingIndexOfTotalPost_component": "<bold>{{startCount}} - {{endCount}}</bold> of <bold>{{totalCount}}</bold>",
    "showingNumberOfTotalResults_component_interval": "(0-1)[Showing <bold>{{number}} - {{index}}</bold> of {{count}} result];(2-inf)[Showing <bold>{{number}} - {{index}}</bold> of {{count}} results];",
    "try_component": "Try <suggest>{{refineSearchText}}</suggest>",
    "tryOptionFilter": "clearing all filters",
    "tryOptionFilterAndViewUrn": "clearing all filters and selected view",
    "tryOptionViewUrn": "clearing the selected view",
    "userOrGroupLabel": "Find a user or group",
    "viewAllResultsFor": "View all results for"
  },
  "settings": {
    "aDescriptionForYourToken": "A description for your token",
    "aNameForYourToken": "A name for your token",
    "anOptionalDescriptionForYourNewToken": "An optional description for your new token.",
    "enterATokenName": "Enter a token name.",
    "giveYourNewTokenAName": "Give your new token a name.",
    "homePagePosts": "Home Page Posts",
    "homePagePostsDescription": "View and manage pinned posts that appear to all users on the landing page.",
    "manageIdentitiesDescription": "View your DataHub users & groups. Take administrative actions.",
    "manageOwnershipTypeDescription": "Create, edit, and remove custom Ownership Types.",
    "manageWithName": "Manage {{name}}",
    "manageYourAppearanceSettings": "Manage your appearance settings.",
    "manageYourSettings": "Manage your DataHub settings.",
    "myViews": "My Views",
    "noOwnershipTypesFound": "No Ownership Types found!",
    "ownershipType": "Ownership Type",
    "ownershipTypes": "Ownership Types",
    "showSimplifiedHomepage": "Show simplified homepage",
    "showSimplifiedHomepageDescription": "Limits entity browse cards on homepage to Domains, Charts, Datasets, Dashboards and Glossary Terms",
    "usersAndGroups": "Users & Groups"
  },
  "share": {
    "checkoutThisOn": "Check out this {{type}} on DataHub: {{linkText}}",
    "csv": {
      "error": {
        "description": "The CSV file could not be downloaded",
        "message": "Download Failed"
      },
      "preparing": {
        "description": "Creating CSV to download",
        "descriptionWithCount_interval": "(0-1)[Creating CSV with {{count}} entitiy to download];(2-inf)[Creating CSV with {{count}} entities to download];",
        "message": "Preparing Download"
      }
    },
    "downloadAs": "Download as...",
    "scheduleADemo": "Schedule a Demo",
    "shareThisViaMail": "Share this {{type}} via email",
    "slackChannel": "Slack Channel",
    "viewSource": "View Source"
  },
  "shared": {
    "addOwners": "Add Owners",
    "appliedTo": "Applied to",
    "colorSaved": "Color Saved",
    "descriptionUpdated": "Description Updated",
    "failedToSaveTagColor": "Failed to save tag color",
    "failedToUpdateDescription": "Failed to update description",
    "noEntities": "No entities"
  },
  "term": {
    "noTermNorGroup": "No Terms or Term Groups"
  },
  "test": {
    "allFailing": "All tests are failing",
    "allPassing": "All tests are passing",
    "failing": "Failing",
    "noEvaluations": "No Evaluations",
    "noTestHaveRun": "No tests have run",
    "noTestsFound": "No Tests Found",
    "passing": "Passing",
    "someFailing": "Some tests are failing",
    "testResults": "Test Results",
    "testResume": "{{passingCount}} passing tests, {{failingCount}} failing tests",
    "testStatusTooltip": "This status is based on the most recent run of each test."
  },
  "token": {
    "accessToken": "Access Tokens",
    "basedAuthIsDisabled": "Token based authentication is currently disabled. Contact your DataHub administrator to enable this feature.",
    "expireAt": "Expires At",
    "expireIn": "Expires in",
    "generateNewToken": "Generate new token",
    "learnMoreLink": "To learn more about the DataHub APIs, check out the",
    "learnMoreLinkText": "DataHub Docs",
    "makeSureYouCopyYourAccessToken": "Make sure to copy your personal access token now. You won’t be able to see it again.",
    "manageAccessToken": "Manage Access Tokens",
    "manageAccessTokenForUseWithAPI": "Manage Access Tokens for use with DataHub APIs.",
    "newPersonalAccessToken": "New Personal Access Token",
    "noAccessToken": "No Access Tokens!",
    "personal": "Personal",
    "personalAccessToken": "Personal Access Tokens",
    "personalAccessTokenDescription": "Personal Access Tokens allow you to make programmatic requests to DataHub's APIs. They inherit your privileges and have a finite lifespan. Do not share Personal Access Tokens.",
    "tokenWillExpireOnAt": "The token will expire on {{date}} at {{time}}}.",
    "tokenWillNeverExpire": "This token will never expire.",
    "toUseATokenExplanation_component": "To use the token, provide it as a <typographyText>Bearer</typographyText> token in the <typographyText>Authorization</typographyText> header when making API requests:",
    "validateTokenRevoke": "Are you sure you want to revoke this token?",
    "validateTokenRevokeDescription": "Anyone using this token will no longer be able to access the DataHub API. You cannot undo this action."
  },
  "user": {
    "enterYourEmail": "Enter your email",
    "editingImageUrlHasBeenDisabled": "Editing image URL has been disabled",
    "editProfile": "Edit profile",
    "assignRoleError": "Failed to assign role {{roleName}} to user {{username}}",
    "assignRoleSuccess": "Assigned role {{roleName}} to user {{username}}!",
    "assignRoleTitle": "Would you like to assign the role {{roleName}} to user {{username}}",
    "error": {
      "fetchFromCache": "Could not fetch logged in user from cache.",
      "notFound": "Could not find logged in user."
    },
    "inviteUser": "Invite Users",
    "noUser": "No user",
    "removeRoleError": "Failed to remove role from {{username}}",
    "removeRoleSuccess": "Removed role from user {{username}}!",
    "removeRoleTitle": "Would you like to remove {{username}}'s existing role?"
  }
}